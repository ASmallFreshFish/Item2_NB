---- AT Matches (36 in 2 files) ----
BC95.c (project\hardware\bc95):	printf("AT\r\n"); 
BC95.c (project\hardware\bc95):			printf("AT\r\n"); 
BC95.c (project\hardware\bc95):    printf("AT+NBAND?\r\n");//获取频段号
BC95.c (project\hardware\bc95):			printf("AT+NBAND?\r\n");//获取频段号
BC95.c (project\hardware\bc95):    printf("AT+CIMI\r\n");//获取卡号，类似是否存在卡的意思，比较重要。
BC95.c (project\hardware\bc95):		    printf("AT+CIMI\r\n");//获取卡号，类似是否存在卡的意思，比较重要。
BC95.c (project\hardware\bc95):    printf("AT+CFUN=0\r\n");//关闭射频
BC95.c (project\hardware\bc95):    printf("AT+NCDP=180.101.147.115,5683\r\n");//配置CDP服务器地址电信平台的，这个COAP协议的IP地址是固定的
BC95.c (project\hardware\bc95):    printf("AT+NRB\r\n");//对模块进行重启
BC95.c (project\hardware\bc95):    printf("AT+CIMI\r\n");//获取卡号，确认模块重启正常
BC95.c (project\hardware\bc95):		    printf("AT+CIMI\r\n");//获取卡号，确认模块重启正常
BC95.c (project\hardware\bc95):    printf("AT\r\n"); 
BC95.c (project\hardware\bc95):		    printf("AT\r\n"); 
BC95.c (project\hardware\bc95):    printf("AT+NBAND?\r\n");//获取频段号
BC95.c (project\hardware\bc95):		    printf("AT+NBAND?\r\n");//获取频段号
BC95.c (project\hardware\bc95):    printf("AT+CIMI\r\n");//获取卡号，类似是否存在卡的意思，比较重要。
BC95.c (project\hardware\bc95):		    printf("AT+CIMI\r\n");//获取卡号，类似是否存在卡的意思，比较重要。
BC95.c (project\hardware\bc95):	printf("AT+CGSN=1\r\n");//获取IMEI号，类似是否存在卡的意思，比较重要。
BC95.c (project\hardware\bc95):		    printf("AT+CGSN=1\r\n");//获取卡号，类似是否存在卡的意思，比较重要。
BC95.c (project\hardware\bc95):    printf("AT+CGATT=1\r\n");//激活网络，PDP
BC95.c (project\hardware\bc95):		    printf("AT+CGATT=1\r\n");//激活网络 
BC95.c (project\hardware\bc95):    printf("AT+CGATT?\r\n");//查询激活状态
BC95.c (project\hardware\bc95):		    printf("AT+CGATT?\r\n");//获取激活状态
BC95.c (project\hardware\bc95):    printf("AT+CSQ\r\n");//查看获取CSQ值
BC95.c (project\hardware\bc95):		    printf("AT+CSQ\r\n");//查看获取CSQ值
BC95.c (project\hardware\bc95):    printf("AT+CEREG?\r\n");
BC95.c (project\hardware\bc95):		    printf("AT+CEREG?\r\n");//判断运营商
BC95.c (project\hardware\bc95):    printf("AT+CEREG=1\r\n");
BC95.c (project\hardware\bc95):		    printf("AT+CEREG=1\r\n");//
BC95.c (project\hardware\bc95):    printf("AT+NMSTATUS?\r\n");//判断当前模块与平台之间的连接关系，一般未发数据之前都是INIITIALISED，如果正常发送到数据到平台之后是MO_DATA_ENABLED
BC95.c (project\hardware\bc95):    printf("AT+NNMI=1\r\n");//配置模块收到下行数据直接打印到串口
BC95.c (project\hardware\bc95):	printf("AT+NMGS=%s,%s\r\n",len,data);//发送COAP数据
BC95.c (project\hardware\bc95):	else//如果返回error 一般是第一次与平台握手问题或者是CDP服务器配置问题。用户可以查询下 AT+NMSTATUS? 打印到显示端进行查看
BC95.c (project\hardware\bc95):		printf("AT+NMSTATUS?\r\n");//判断当前模块与平台之间的连接关系，一般未发数据之前都是INIITIALISED，如果正常发送到数据到平台之后是MO_DATA_ENABLED
BC95.c (project\hardware\bc95):		printf("AT+NMGS=%s,%s\r\n",len,data);//发送COAP数据
Gesture.h (project\hardware\gesture):#define AT_COMMAND "AT\r\n"
